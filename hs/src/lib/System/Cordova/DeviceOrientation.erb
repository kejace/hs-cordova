<%
require File.expand_path(File.dirname(__FILE__) + '/../../../../rb/data.rb')
%>
{-# LANGUAGE JavaScriptFFI #-}
module System.Cordova.DeviceOrientation
( CompassHeading(..)
, CompassError(..)
, CompassErrorCode(..)
, getCurrentHeading
, watchHeading
) where

import GHCJS.Types
import GHCJS.Marshal
import Data.Time.Clock
import System.Cordova.EventListener
<%= hsImports %>

<%= jsImport(
  'navigator.compass.getCurrentHeading(hs_good($c), hs_error($c));',
  [], 'Either CompassError CompassHeading',
) %>

<%= makeRecord('CompassHeading', [
  Field.new('Maybe Double', 'magneticHeading'),
  Field.new('Maybe Double', 'trueHeading'),
  Field.new('Maybe Double', 'headingAccuracy'),
  Field.new('Maybe UTCTime', 'timestamp'),
], instanceTo: false) %>

<%= makeRecord('CompassError', [
  Field.new('CompassErrorCode', 'code'),
], instanceDefault: false) %>

<%= makeEnum('CompassErrorCode', [
  Tag.new('CompassInternalErr' , jsExpr: 'COMPASS_INTERNAL_ERR' ),
  Tag.new('CompassNotSupported', jsExpr: 'COMPASS_NOT_SUPPORTED'),
], exprPrefix: 'CompassError.') %>

<%= makeRecord('CompassOptions', [
  Field.new('Maybe Double', 'frequency'),
  Field.new('Maybe Double', 'watchFilter', jsName: 'filter'),
]) %>

foreign import javascript unsafe
  "navigator.compass.watchHeading($2, $3, $1);"
  js_watchHeading
  :: JSRef CompassOptions
  -> JSFun (JSRef CompassHeading -> IO ())
  -> JSFun (JSRef CompassError -> IO ())
  -> IO (JSRef String)

foreign import javascript unsafe
  "navigator.compass.clearWatch($1);"
  js_clearWatch :: JSRef String -> IO ()

watchHeading
  :: CompassOptions
  -> (Either CompassError CompassHeading -> IO ())
  -> IO (IO ())
watchHeading opts f = do
  opts' <- toJSRef opts
  globalListener (js_watchHeading opts') js_clearWatch f
