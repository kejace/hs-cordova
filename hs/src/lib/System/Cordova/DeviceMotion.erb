<%
require File.expand_path(File.dirname(__FILE__) + '/../../../../rb/data.rb')
%>
{-# LANGUAGE JavaScriptFFI #-}
module System.Cordova.DeviceMotion
( Acceleration(..)
, AccelerometerOptions(..)
, getCurrentAcceleration
, watchAcceleration
) where

import GHCJS.Types
import GHCJS.Marshal
import Data.Time.Clock
import System.Cordova.EventListener
<%= hsImports %>

<%= jsImport(
  'navigator.accelerometer.getCurrentAcceleration(hs_good($c), hs_error($c));',
  [], 'Either () Acceleration',
) %>

<%= makeRecord('Acceleration', [
  Field.new('Maybe Double', 'accX', jsName: 'x'),
  Field.new('Maybe Double', 'accY', jsName: 'y'),
  Field.new('Maybe Double', 'accZ', jsName: 'z'),
  Field.new('Maybe UTCTime', 'timestamp'),
], instanceTo: false) %>

<%= makeRecord('AccelerometerOptions', [
  Field.new('Maybe Double', 'frequency'), # TODO: should this be period?
]) %>

foreign import javascript unsafe
  "navigator.accelerometer.watchAcceleration($2, $3, $1);"
  js_watchAcceleration
  :: JSRef AccelerometerOptions
  -> JSFun (JSRef Acceleration -> IO ())
  -> JSFun (JSRef () -> IO ())
  -> IO (JSRef String)

foreign import javascript unsafe
  "navigator.accelerometer.clearWatch($1);"
  js_clearWatch :: JSRef String -> IO ()

watchAcceleration
  :: AccelerometerOptions
  -> (Either () Acceleration -> IO ())
  -> IO (IO ())
watchAcceleration opts f = do
  opts' <- toJSRef opts
  globalListener (js_watchAcceleration opts') js_clearWatch f
